#########
Initializing parse data structures
#########
#########
Starting Parse
#########


########
Done parsing, destroying scanner and parser
########


########
Optimizing tree:
########
Done... printing optimized tree
Printing PML Abstract Syntax Tree
-----------
Variables
-----------
   Variable: mem [global; width=0, addr=0]
-----------
Functions
-----------
   Function[intrinsic]: str_len() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: ref [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: str_addr() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: ref [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: str_ispkt() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: ref [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: str_seg() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: ref [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: str_isnull() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: ref [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: str_mkref() -- 4 args, 0-byte stack, return type=string reference
   Parameters & Variables -- 
      Variable: ispkt [param; width=4, addr=0]
      Variable: seg [param; width=4, addr=1]
      Variable: addr [param; width=4, addr=2]
      Variable: len [param; width=4, addr=3]
   Body -- 
      (null)
   Function[intrinsic]: pkt_new() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: len [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: pkt_new_z() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: len [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: pkt_swap() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pndst [param; width=4, addr=0]
      Variable: pnsrc [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: pkt_copy() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pndst [param; width=4, addr=0]
      Variable: pnsrc [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: pkt_ins_u() -- 3 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: off [param; width=4, addr=1]
      Variable: len [param; width=4, addr=2]
   Body -- 
      (null)
   Function[intrinsic]: pkt_ins_d() -- 3 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: off [param; width=4, addr=1]
      Variable: len [param; width=4, addr=2]
   Body -- 
      (null)
   Function[intrinsic]: pkt_cut_u() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: str [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: pkt_cut_d() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: str [param; width=8, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: pkt_parse() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: pkt_get_off() -- 4 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: prid [param; width=4, addr=1]
      Variable: idx [param; width=4, addr=2]
      Variable: oid [param; width=4, addr=3]
   Body -- 
      (null)
   Function[intrinsic]: pkt_adj_off() -- 5 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: prid [param; width=4, addr=1]
      Variable: idx [param; width=4, addr=2]
      Variable: oid [param; width=4, addr=3]
      Variable: amt [param; width=4, addr=4]
   Body -- 
      (null)
   Function[intrinsic]: parse_push_back() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: prid [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: parse_pop_back() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: parse_push_front() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: prid [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: parse_pop_front() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: parse_update() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pdesc [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: fix_dltype() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: fix_len() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pdesc [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: fix_all_len() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: fix_csum() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pdesc [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: fix_all_csum() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_ts_sec() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_ts_nsec() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_ts() -- 3 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: sec [param; width=4, addr=1]
      Variable: nsec [param; width=4, addr=2]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_presnap() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_presnap() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_inport() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_inport() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_outport() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_outport() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_flowid() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_flowid() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_class() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_class() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: meta_get_seq() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
   Body -- 
      (null)
   Function[intrinsic]: meta_set_seq() -- 2 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: pnum [param; width=4, addr=0]
      Variable: val [param; width=4, addr=1]
   Body -- 
      (null)
   Function[intrinsic]: exit() -- 1 args, 0-byte stack, return type=void
   Parameters & Variables -- 
      Variable: rval [param; width=4, addr=0]
   Body -- 
      (null)
   Function[inline, intrinsic, pconst]: pop() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: num [param; width=4, addr=0]
   Body -- 
      (null)
   Function[inline, intrinsic, pconst]: log2() -- 1 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: num [param; width=4, addr=0]
   Body -- 
      (null)
   Function[inline, intrinsic, pconst]: min() -- 2 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: num1 [param; width=4, addr=0]
      Variable: num2 [param; width=4, addr=1]
   Body -- 
      (null)
   Function[inline, intrinsic, pconst]: max() -- 2 args, 0-byte stack, return type=scalar
   Parameters & Variables -- 
      Variable: num1 [param; width=4, addr=0]
      Variable: num2 [param; width=4, addr=1]
   Body -- 
      (null)
-----------
Begin Rule
-----------
   (null)
-----------
Packet Rules
-----------
   Rule: (packet)
   Empty pattern
   Action Variables -- 
   Action -- 
      List:
      -----
      Assignment to eth.dst
      Value -- 
         Byte string [[c]; width=0] -- 
         6 bytes in read-only segment at address 0
         ffffffffffff
      -----
      Assignment to eth.dst
      Value -- 
         Byte string [[c]; width=0] -- 
         6 bytes in read-only segment at address 6
         010203040506
      -----
      Assignment to eth.dst
      Value -- 
         Byte string [[c]; width=0] -- 
         6 bytes in read-only segment at address 12
         090807060504
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 18
         0000000000000000
         0000000000000000
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 34
         0000000000000000
         0000000000000001
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 50
         fe80000000000000
         0000000000000001
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 66
         0001000200030004
         0005000600070008
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 82
         0011002200330044
         0055006600770088
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 98
         0111022203330444
         0555066607770888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 114
         1111222233334444
         5555666677778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 130
         000a000b000c000d
         000e000f00070008
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 146
         00aa00bb00cc00dd
         00ee00ff00770088
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 162
         0aaa0bbb0ccc0ddd
         0eee0fff07770888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 178
         aaaabbbbccccdddd
         eeeeffff77778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 194
         0000000000000000
         0000000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 210
         1111000000000000
         0000000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 226
         1111222200000000
         0000000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 242
         1111222233330000
         0000000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 258
         1111222233334444
         0000000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 274
         1111222233334444
         5555000000008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 290
         1111222233334444
         5555666600008888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 306
         1111000000000000
         0000000077778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 322
         1111000000000000
         0000666677778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 338
         1111000000000000
         5555666677778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 354
         1111000000004444
         5555666677778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 370
         1111000033334444
         5555666677778888
      -----
      Assignment to ip6.saddr
      Value -- 
         Byte string [[c]; width=0] -- 
         16 bytes in read-only segment at address 386
         0000222233334444
         5555666677778888
      -----
-----------
Tick Rule
-----------
   (null)
-----------
-----------
End Rule
-----------
   (null)
-----------


########
Clearing tree:
########
