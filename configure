#!/bin/sh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# This is NOT an autoconf script.  Just a hand-crafted script to attempt
# to configure for the proper platform.

INSTALL_PREFIX=${INSTALL_PREFIX:-/usr/local}
USE_LIBDL=0
LIBDLFLG=
LIBDL_SET=n
DEBUG=n
CATLIB_SET=n

usage() {
	echo "usage $0 [--help|-h] [--dlsym|--no-dlsym] [--debug]" >&2 
	echo "         [--catlib=PATH]" >&2
	exit 1
}


while [ $# -gt 0 ] ; do 
	case $1 in
		--dlsym)
			LIBDL_SET=y
			USE_LIBDL=1
			LIBDLFLG="-ldl -rdynamic"
		;;
		--no-dlsym)
			LIBDL_SET=y
			USE_LIBDL=0
			LIBDLFLG=
		;;
		--debug)
			DEBUG=y
		;;
		--catlib*)
			CATLIB_ROOT=`echo $1 | sed -e 's/--catlib=//'`
			CATLIB_SET=y
		;;
		*) usage
		;;
	esac
	shift
done


if [ "$CATLIB_SET" = "n" ] ; then
	if [ -d ../catlib ] ; then
		CATLIB_ROOT=../catlib
	elif [ -d ./catlib ] ; then
		CATLIB_ROOT=./catlib
	else
		echo Can not find catlib!
		usage
	fi
fi



#if [ "$LIBDL_SET" = "n" ] ; then
#	if [ -f /usr/include/dlfcn.h ] ; then
#		echo "configure: dlsym support detected"
#		LIBDLFLG="-ldl -rdynamic"
#		USE_LIBDL=1
#	fi
#fi


set -e

BASE=`pwd`
# canonicalize CATLIB_ROOT
CATLIB_ROOT=`(cd $CATLIB_ROOT && pwd)`

cd src
rm -f .has_pcap

if uname -a 2>/dev/null | grep -i linux > /dev/null 2>&1
then
	echo configure: Linux detected
	echo configure: linking linux-specific source files
	[ -h pktin.c ] || ln -s pktin-linux.c pktin.c
	[ -h pktout.c ] || ln -s pktout-linux.c pktout.c

elif uname -a 2>/dev/null | grep BSD > /dev/null 2>&1 
then

	echo configure: BSD detected
	echo configure: linking BSD-specific source files
	[ -h pktin.c ] || ln -s pktin-bsd.c pktin.c
	[ -h pktout.c ] || ln -s pktout-bsd.c pktout.c

elif uname -a 2>/dev/null | grep Darwin > /dev/null 2>&1 
then

	echo configure: OSX detected
	echo configure: linking BSD-specific source files
	[ -h pktin.c ] || ln -s pktin-bsd.c pktin.c
	[ -h pktout.c ] || ln -s pktout-bsd.c pktout.c

else
	echo configure: Unknown OS detected.  pktin/pktout will not function.
	[ -h pktin.c ] || ln -s pktin-none.c pktin.c
	[ -h pktout.c ] || ln -s pktout-none.c pktout.c
fi


if [ -f /usr/include/pcap.h -o -f /usr/include/pcap/pcap.h -o \
     -f /usr/local/include/pcap.h -o -f /usr/local/include/pcap/pcap.h ] 
then
	echo "configure: libpcap detected"
	echo "configure: linking libpcap-specific files in"
	echo > .has_pcap
	[ -h pcapin-tgt.c ] || ln -s pcapin.c pcapin-tgt.c
	[ -h pcapout-tgt.c ] || ln -s pcapout.c pcapout-tgt.c
else
	echo "configure: libpcap not detected: pcapin/pcapout will not function."
	[ -h pcapin-tgt.c ] || ln -s pcapin-none.c pcapin-tgt.c
	[ -h pcapout-tgt.c ] || ln -s pcapout-none.c pcapout-tgt.c
fi


echo configure: Building onics_config.h
rm -f config.h
cat <<EOF > onics_config.h
/*
 * ONICS
 * Copyright 2016
 * Christopher Adam Telfer
 *
 * onics_config.h-- general configuration file for ONICS.
 *
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* AUTOMATICALLY GENERATED FILE:  DO NOT EDIT BY HAND */
#ifndef __onics_config_h
#define __onics_config_h

#define ONICS_INSTALL_PREFIX "$INSTALL_PREFIX"
#define ONICS_DLSYM_SUPPORT $USE_LIBDL

#endif /* __onics_config_h */
EOF


echo configure: Building makefiles 
cd $BASE
if [ $DEBUG = "y" ]; then
	MKOPTS="-g -Wall -Wno-pointer-sign"
	MKLIBS="-L\${CATLIB_ROOT}/lib -lcat_dbg $LIBDLFLG"
else
	MKOPTS="-O3 -Wall -Wno-pointer-sign"
	MKLIBS="-L\${CATLIB_ROOT}/lib -lcat $LIBDLFLG"
fi

sed -e "s|^CATLIB_ROOT=.*\$|CATLIB_ROOT=$CATLIB_ROOT|" \
    -e "s|^OPTS=.*\$|OPTS=$MKOPTS|" \
    -e "s|^LIBS=.*\$|LIBS=$MKLIBS|" \
    src/makefile.tmpl > src/makefile


sed -e "s|^CATLIB_ROOT=.*\$|CATLIB_ROOT=$CATLIB_ROOT|" \
    doc/makefile.tmpl > doc/makefile

sed -e "s|^CATLIB_ROOT=.*\$|CATLIB_ROOT=$CATLIB_ROOT|" \
    tests/src/makefile.tmpl > tests/src/makefile
