.TH "psort" 1 "August 2013" "ONICS 1.0"
.SH NAME
psort - Sort a set of packets.
.P
.SH SYNOPSYS
\fBpsort\fP [\fB-hr\fP] [\fB-k\fP \fIkeytype\fP] 
[\fIinfile\fP [\fIoutfile\fP]]
.P
.SH DESCRIPTION
\fBpsort\fP reads in a stream of XPKT formatted packets and sorts them 
according to a key specified by the user.  By default \fBpsort\fP reads
from standard input and writes to standard output.  If \fIinfile\fP is
specified then \fBpsort\fP reads from that file instead.  If
\fIoutfile\fP is specified then \fBpsort\fP writes to it instead.
.P
The different key types that the user can sort on are all based on an
XPKT tag.  While this might seem limiting, keep in mind that the user
can tag a packet with the XPKT_TAG_APPINFO tag which can hold up to 1022
bytes of application-specified data. 
.P
.SH OPTIONS
.IP \fB-h\fP
Print the usage of the command and exit.
.IP "\fB-k\fP \fIkeytype\fP"
The \fIketype\fP argument can be one of "timestamp", "flowid", "class",
"seq", or "appinfo".  The default is "timestamp".  Each of these
corresponds to an XPKT tag type and the metadata it represents.
.P
.SH EXAMPLES
.P
Sort a set of packets by timestamp:
.nf

	psort input.xpkt output.xpkt

.fi
Read in the TCP packets from a packet trace and sort them by flow ID in
reverse:
.nf

	ppick tcp infile.xpkt | psort -r -k flowid > outfile.xpkt

.fi
.P
.SH AVAILABILITY
This utility should be available on all supported ONICS platforms.
.P
.SH AUTHOR
Christopher A. Telfer <ctelfer@gmail.com>
.P
.SH "SEE ALSO"
pml(1), x2hpkt(1), rawpkt(1), ppick(1)
