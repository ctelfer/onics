.TH "psortk" 1 "August 2013" "ONICS 1.0"
.SH NAME
psortk - Sort a set of packets based on various keys.
.P
.SH SYNOPSYS
\fBpsortk\fP [\fB-hr\fP] \fB-k\fP \fIkeyfield\fP[/\fIlen\fP]
[\fIkeyfield\fP[/\fIlen\fP] ...] [\fIinfile\fP [\fIoutfile\fP]]
.P
.SH DESCRIPTION
\fBpsortk\fP reads in a stream of XPKT formatted packets and sorts them 
according to a key specified by the user.  By default \fBpsortk\fP reads
from standard input and writes to standard output.  If \fIinfile\fP is
specified then \fBpsortk\fP reads from that file instead.  If
\fIoutfile\fP is specified then \fBpsortk\fP writes to it instead.  By 
default, \fBpsortk\fP sorts packets in ascending order.
.P
\fBpsortk\fP is a wrapper script that uses PML to build up a key in the
XPKT_TAG_APPINFO tag, invokes psort to sort the packets based on that
key, and then invokes PML to delete the tag.  The key can be no longer
than 1020 bytes without causing an error.  Furthermore, a key longer
than 512 bytes will be silently truncated to 512 bytes.  The user must
specify at least one key field using the \fB-k\fP option.  \fBpsortk\fP
builds the sort key by appending the fields specified by the \fB-k\fP
options in order.
.P
Note well that if there is an existing XPKT_TAG_APPINFO tag on a packet
that \fBpsortk\fP will delete it.
.P
.SH OPTIONS
.IP \fB-h\fP
Print the usage of the command and exit.
.IP "\fB-k\fP \fIkeyfield\fP[/\fIlen\fP]"
Add a field to the end of the ordered list of fields from which to 
build the sort key.  If a packet is encountered during processing which
does not have this field, the program will abort with an error.  By
default each field is assumed to be 4-bytes in length.  If it is less
than that amount and \fIlen\fP is not specified, \fBpsortk\fP will 
zero-pad out the value to 4-bytes and it will take up 4 bytes in the 
final key.  
.IP 
If \fIlen\fP is specified, then the behavior depends on whether
\fIlen\fP is greater than 4 or not.  If \fIlen\fP is greater than 4,
then \fIkeyfield\fP is treated as a byte string field \fBpsortk\fP adds
it to the key 4 bytes at a time with some fixup at the end for the last
few bytes.  If \fIlen\fP is less than or equal to 4, then \fBpsortk\fP
reads \fIkeyfield\fP as a scalar value and then inserts the least
significant \fIlen\fP bytes of that word into the key in big-endian byte
order.  Either way, the field will take up exactly \fIlen\fP bytes in 
the sort key.
.IP \fB-r\fP
Perform a reverse sort (decending instead of ascending order).
This option must appear first in the option list if it appears at all.
.P
.SH EXAMPLES
Sort a set of packets using IP source address as the primary key and 
IP destination address as the secondary key in ascending order.
.P
.nf
	psortk -k ip.saddr -k ip.daddr unsorted.xpkt sorted.xpkt
.fi
.SH AVAILABILITY
This utility should be available on all supported ONICS platforms.
.P
.SH AUTHOR
Christopher A. Telfer <ctelfer@gmail.com>
.P
.SH "SEE ALSO"
pml(1), psort(1)
