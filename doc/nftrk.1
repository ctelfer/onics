.TH "nftrk" 1 "August 2013" "ONICS 1.0"
.SH NAME
nftrk - Track network flows and tag packets with a flow ID.
.P
.SH SYNOPSYS
\fBnftrk\fP [\fB-hrRt\fP] [\fB-f\fP \fIflowfile\fP]
[\fB-u\fP \fIinterval\fP] [\fIinfile\fP [\fIoutfile\fP]]
.P
.SH DESCRIPTION
\fBnftrk\fP is a simple utility to track flows in a stream of packets.
It tags each packet that flows through it with a XPKT_TAG_FLOW tag.  It
also emits flow events to standard error.  The XPKT_TAG_FLOW tag can be
used by other utilities (for example pml(1)) as metadata for matching or
operating on packets.  By default \fBnftrk\fP reads packets in XPKT
format from standard input and writes them back out standard output.  If
\fIinfile\fP is specified, \fBnftrk\fP reads the packets in from it
instead.  Similarly, if \fIoutfile\fP is specified, \fBnftrk\fP writes
packets out to it.
.P
\fBnftrk\fP generates three types of flow events on stadard error.  When
it detects a new flow it emits a "flow start" event.  Periodically (by
default every 10 seconds) \fBnftrk\fP emtis a "flow update" for all the
flows that are still live.  Finally, when a flow ends (currently
detected by a liveness timeout) \fPnftrk\fP emits an "flow end" event.
.P
\fBnftrk\fP currently tracks TCP and UDP flows at the granularity of a
traditional 5-tuple:  source IP address, destination IP address, source
port, destination port and IP protocol.  \fBnftrk\fP parses both IPv4
and IPv6 and differentiates between flows in both protocols.  It can
also track ICMP echo requests and replies.  \fBnftrk\fP maps ICMP error
messages to the flow that generated them (i.e. based on the fields in
the encapsulated header).  If a packet doesn't have a TCP, UDP or ICMP
header, then \fBnftrk\fP tracks the packet in a 3-tuple flow of source
IP address, destination IP address and IP protocol.  If the packet
doesn't even have an IPv4 or IPv6 header, then \fBnftrk\fP tracks the
flow by the source and destination MAC address and the datalink type.
.P
.SH OPTIONS
.P
.IP "\fB-f\fP \fIflowfile\fP"
Write the flow events to \fIflowfile\fP instead of writing the flow 
events to standard error.
.IP \fB-h\fP
Print the usage of the command and exit.
.IP \fB-q\fP
Quiet mode:  do not dump flow events at all.  Just assign flow IDs.
.IP \fB-r\fP
Count time according to the real-time of the system.  This is the
default mode of operation.
.IP \fB-R\fP
Report the timestamps of flows relative to the start of the \fBnftrk\fP
program.  This option is for real-time mode of operation only.
.IP \fB-t\fP
Count time according to the relative timestamps between packets.  This
mode of operation makes more sense for offline analsys of capture trace
files.
.IP "\fB-u\fP \fIinterval\fP"
Change the interval of flow updates to \fIinterval\fP seconds.
\fIinterval\fP can be a floating point value.
.P
.SH EXAMPLES
Print the flows from an off-line packet trace to a file:
.nf

	nftrk -f flows.txt trace.xpkt /dev/null

.fi
Tag flows for use in pml(1):
.nf

	nftrk -q infile.xpkt | pml -e ""....

.fi
Tag flows and split them into separate files:
.nf

	nftrk -q infile.xpkt | psplit 

.fi
Print flows that are coming in from a live capture from eth0:
.nf

	pktin eth0 | nftrk > /dev/null

.fi
.P
.SH AVAILABILITY
This utility should be available on all supported ONICS platforms.
.P
.SH AUTHOR
Christopher A. Telfer <ctelfer@gmail.com>
.P
.SH "SEE ALSO"
pktin(1), pktout(1), pml(1), psplit(1)
