#!/bin/sh

KEYPROG=""
KADDR=0
PROGNAME=$0
REV=""

usage() {
	echo "usage: $PROGNAME -k KEYFIELD[/LEN] [-k KEYFIELD[/LEN] ...]" \
	     " [INFILE [OUTFILE]]" >&2
	exit 1
}

add_key() {
	if echo $1 | grep "/" > /dev/null 2>&1 
	then
		KEYSTR=`echo $1 | sed -e 's/\/.*$//'`
		LEN=`echo $1 | sed -e 's/^[^\/]*\///'`
		IDX=0
		[ $LEN -lt 1 ] && usage
		while [ $LEN -gt 4 ]
		do
			KEYPROG="$KEYPROG
				 meta_wr32(0, 128, 4+$KADDR, $KEYSTR[$IDX,4]);"
			KADDR=`expr $KADDR \+ 4`
			IDX=`expr $IDX \+ 4`
			LEN=`expr $LEN - 4`
		done

		if [ $IDX -gt 0 ] 
		then
			if [ $LEN -eq 3 ]
			then
				KEYPROG="$KEYPROG
					 meta_wr16(0, 128, 4+$KADDR, $KEYSTR[$IDX,2]);"
				KADDR=`expr $KADDR \+ 2`
				IDX=`expr $IDX \+ 2`
				LEN=1
			fi

			if [ $LEN -eq 4 ]
			then
				KEYPROG="$KEYPROG
					 meta_wr32(0, 128, 4+$KADDR, $KEYSTR[$IDX,4]);"
				KADDR=`expr $KADDR \+ 4`
			elif [ $LEN -eq 2 ] 
			then
				KEYPROG="$KEYPROG
					 meta_wr16(0, 128, 4+$KADDR, $KEYSTR[$IDX,2]);"
				KADDR=`expr $KADDR \+ 2`
			else
				KEYPROG="$KEYPROG
					 meta_wr8(0, 128, 4+$KADDR, $KEYSTR[$IDX,1]);"
				KADDR=`expr $KADDR \+ 1`
			fi
		else

			KEYPROG="$KEYPROG
				 tval = $KEYSTR;"

			if [ $LEN -eq 3 ]
			then
				KEYPROG="$KEYPROG
					 hi16 = (tval >> 8) & 0xFFFF;
					 tval = tval & FF;
					 meta_wr16(0, 128, 4+$KADDR, hi16);"
				KADDR=`expr $KADDR \+ 2`
				LEN=1
			fi
			if [ $LEN -eq 4 ]
			then
				KEYPROG="$KEYPROG
					 meta_wr32(0, 128, 4+$KADDR, tval);"
				KADDR=`expr $KADDR \+ 4`
			elif [ $LEN -eq 2 ] 
			then
				KEYPROG="$KEYPROG
					 meta_wr16(0, 128, 4+$KADDR, tval);"
				KADDR=`expr $KADDR \+ 2`
			else
				KEYPROG="$KEYPROG
					 meta_wr8(0, 128, 4+$KADDR, tval);"
				KADDR=`expr $KADDR \+ 1`
			fi
		fi
	else
		KEYPROG="$KEYPROG
			 meta_wr32(0, 128, 4 + $KADDR, $1);"
		KADDR=`expr $KADDR \+ 4`
	fi
}


if [ $# -gt 0 -a x$1 = "x-r" ] 
then
	REV="-r"
	shift
fi

[ $# -lt 2 -o ! x$1 = "x-k" ] && usage


while [ $# -gt 0 -a x$1 = "x-k" ]
do
	[ $# -gt 1 ] || usage $0
	shift
	add_key $1
	shift
done

PMLKPROG=" { if (meta_has(0, 128))
	       meta_rem(0, 128);

	     meta_add_info(0, $KADDR);

	     $KEYPROG
	   }
	 "

# echo $PMLKPROG
# exit 1

if [ $# -gt 1 ] 
then
	pml -e "$PMLKPROG" $1 |
	psort $REV -k appinfo | 
	pml -e '{meta_rem(0, 128);}' > $2
else
	pml -e "$PMLKPROG" $1 |
	psort $REV -k appinfo | 
	pml -e '{meta_rem(0, 128);}'
fi
