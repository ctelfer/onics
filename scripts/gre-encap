#!/bin/sh
#
# ONICS
# Copyright 2012-2016
# Christopher Adam Telfer
#
# gre-encap - Wrap a packet in [NV]GRE+IP+Eth headers.
#
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

usage() {
	echo "usage: $0 [-s|-n] [-f file] [stmt1 stmt2 ...]">&2
	echo "	The -s option strips the leading ethernet header if present" >&2
	echo "	The -n option makes the header NVGRE instead of GRE" >&2
	echo "    This option will only encapsulate packets whose outermost" >&2
	echo "    header is ethernet.  It is mutually exclusive with -n." >&2
	exit 1
}

INFILE=""
PMLSCRIPT=""
GPROTO="@gre"
LEN=38

if [ $# -gt 0 ]
then
	[ "$1" = "-h" ] && usage

	if [ "$1" = "-s" ]
	then
		PMLSCRIPT="
if (eth and eth.index == 1) {
	pkt_cut_u(eth.header);
	parse_pop_front(0);
}
"
		shift
	elif [ "$1" = "-n" ]
	then
		PMLSCRIPT="
if (not eth or eth.index != 1) { next; }
"
		GPROTO="@nvgre"
		LEN=42
		shift
	fi

	if [ "$1" = "-f" ]
	then
		[ $# -lt 2 ] && usage
		INFILE="$2"
		shift
		shift
	fi
fi

PMLSCRIPT="
import \"std.pml\";
{
	$PMLSCRIPT
	parse_push_front(0, $GPROTO);
	parse_push_front(0, @ip);
	parse_push_front(0, @eth);
"

for S
do
	PMLSCRIPT="$PMLSCRIPT
$S"
done

PMLSCRIPT="$PMLSCRIPT
	fix_lens(0);
	fix_csums(0);
}"

exec pml -e "$PMLSCRIPT" $INFILE
