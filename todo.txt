Key:
  + -- Should do this
  * -- Nice to have
  ? -- Not sure if we should do this but should consider
  - -- Comment

PML
 + Fix up command line options: add parsing of command-line programs
 + Add "standard include path/files"
 + Add exit() intrinsic.
 + More test cases (control flow especially)
 + Fix code gen error reporting:  no 'fprintf(stderr....)'
 + Proper checking for allocation failures in parser.
 * Optimize binary operations with at least one constant operand.
 * Hash table support
 * Data structure support (maybe just hash tables)
 * random() intrinsic
 ? AST-based interpreter for comparison with code generated version


Proto parsing
 * More checking of ICMP packets by type.
 * Check restrictions on parsing to ensure termination.


x2hpkt:
 * Add field printing for xpkt header


netvm_prog API:
 * Alter format to allow for coprocessor patching.


NetVM:
 ? Revise netvm cmp, pcmp and mskcmp to check lengths

NetVM Coprocessors
 * DNS Resolver coprocessor
 * Hash table coprocessor
 * Backing store coprocessor for packets
 * Coprocessor for RNG
 + Fix up / test regex compilation on error patterns (catlib).
 ? Create compatible regex coprocessor for other regex libraries.


pktmux/pktdemux:
 * Allow easier specification of sources and sinks rather than just shell 
   operations and conventions.  These are a bit too cumbersome. 


pktrel:
 + everyting


pktdiff:
 + everything




Regular expressions in NetVM
 - There are a max # of patterns at one time.  All operations get an error
   if the pattern index is out of bounds.
 - Load Pattern [addr, len, idx] -> []
	* frees previous pattern if present
	* May give an error if we run out of memory or if the pattern
	  requires too many matches.
 - Clear Pattern [idx] -> []
 - Match [addr, len, idx] -> [0 or 1]
	* Error if pattern not loaded
 - MatchX [addr, len, nmatch, idx] ->
	[0]
	[offn, offn-1, offn-2 .. off1, pos]
	* Error if pattern not loaded
	* Error if nmatch is too large for the pattern


